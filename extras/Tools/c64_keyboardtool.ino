//Array values are keyboard-values returned from USB
//LeftShift, RightShift, Control, and Commodore are special codes, represented here with 0xfc..0xff
static const uint8_t ktab[8][8] = {
  {0x2a, 0x28, 0x4f, 0x40, 0x3a, 0x3c, 0x3e, 0x51}, //DEL, Return, Cursor Right, F7, F1, F3, F5, Cursor Down
  {0x20, 0x1a, 0x04, 0x21, 0x1d, 0x16, 0x08, 0xff}, //3, W, A, 4, Z, S, E, LeftShift
  {0x22, 0x15, 0x07, 0x23, 0x06, 0x09, 0x17, 0x1b}, //5, R, D, 6, C, F, T, X
  {0x24, 0x1c, 0x0a, 0x25, 0x05, 0x0B, 0x18, 0x19}, //7, Y, G, 8, B, H, U, V
  {0x26, 0x0c, 0x0D, 0x27, 0x10, 0x0E, 0x12, 0x11}, //9, I, J, 0, M, K, O, N
  {0x57, 0x13, 0x0F, 0x56, 0x37, 0x33, 0x2f, 0x36}, //+(Keypad), P, L, -(Keypad), ",", ":", "@", ","
  {0x49, 0x55, 0x34, 0x4A, 0xfe, 0x32, 0x4b, 0x54}, //Pound(ins), *(Keypad), ";", HOME (Pos1), RightShift, =, UP Arrow (Bild hoch), /(Keypad)
  {0x1e, 0x4e, 0xfd, 0x1f, 0x2c, 0xfc, 0x14, 0x29} //1,LEFT ARROW(Bild runter) , CTRL, 2, Space, Commodore, Q, RUN/STOP(ESC)
};


uint8_t rows[256];
uint8_t cols[256];


void setup() {
  memset(rows, 0, sizeof(rows));
  memset(cols, 0, sizeof(cols));

  for (int r = 0; r < 8; r++) {
    for (int c = 0; c < 8; c++) {
      uint8_t ch = ktab[r][c];
      if (ch > 0) {
        cols[ch] = 1 << c;
        rows[ch] = 1 << r;
      }
    }
  }

  while (!Serial);

  Serial.println();
  Serial.println("//Autogenerated with C64_keyboardtool.ino :");
  Serial.println("static const uint8_t keymatrixmap[2][256] = {");
  Serial.println("//Rows:");
  Serial.println("// 0    1     2     3    4     5     6      7     8      9     A     B     C     D     E     F   ");
  Serial.print("{");
  for (int r = 0; r < 16; r++) {
    for (int c = 0; c < 16; c++) {
      Serial.printf("0x%02x%s ", rows[r * 16 + c], ((c < 15) || (r < 15)) ? "," : "},");
    }
    Serial.printf("//0x%02X\n ", r * 16);
  }
  //Serial.println("");
  Serial.println("//Columns:");
  Serial.println("// 0    1     2     3    4     5     6      7     8      9     A     B     C     D     E     F   ");
  Serial.print("{");
  for (int r = 0; r < 16; r++) {
    for (int c = 0; c < 16; c++) {
      Serial.printf("0x%02x%s ", cols[r * 16 + c], (c < 15 || r < 15) ? "," : "}};");
    }
    Serial.printf("//0x%02X\n ", r * 16);
  }


}

void loop() {
  // put your main code here, to run repeatedly:

}
